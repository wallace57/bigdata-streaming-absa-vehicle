"""
==================================================
Vehicle Kafka Producer (Single Camera)
--------------------------------------------------
- G·ª≠i khung h√¨nh (frame) t·ª´ m·ªôt video offline
  t∆∞∆°ng ·ª©ng v·ªõi m·ªôt camera v√†o Kafka topic.
- D√πng cho Airflow task ri√™ng bi·ªát:
    * run_producer_cam1.sh ‚Üí CAM_1
    * run_producer_cam2.sh ‚Üí CAM_2
==================================================
"""

import cv2
import base64
import json
import time
import sys
import os
from kafka import KafkaProducer

# ==========================
# 1Ô∏è‚É£ C·∫•u h√¨nh
# ==========================
KAFKA_BROKER = "kafka:9092"
TOPIC = "vehicle-stream"
FPS_LIMIT = 5  # s·ªë frame/s g·ª≠i v√†o Kafka


# ==========================
# 2Ô∏è‚É£ H√†m h·ªó tr·ª£
# ==========================
def encode_frame(frame):
    """Chuy·ªÉn frame OpenCV sang chu·ªói base64."""
    _, buffer = cv2.imencode(".jpg", frame)
    return base64.b64encode(buffer).decode("utf-8")


def stream_video(video_path, producer, camera_id):
    """ƒê·ªçc video v√† g·ª≠i t·ª´ng frame v√†o Kafka."""
    if not os.path.exists(video_path):
        print(f"[Producer-{camera_id}] ‚ùå Kh√¥ng t√¨m th·∫•y file: {video_path}")
        sys.exit(1)

    cap = cv2.VideoCapture(video_path)
    if not cap.isOpened():
        print(f"[Producer-{camera_id}] ‚ö†Ô∏è Kh√¥ng th·ªÉ m·ªü video: {video_path}")
        sys.exit(1)

    fps_interval = 1 / FPS_LIMIT
    print(f"[Producer-{camera_id}] üé• B·∫Øt ƒë·∫ßu stream t·ª´ {os.path.basename(video_path)}")

    frame_count = 0
    while cap.isOpened():
        ret, frame = cap.read()
        if not ret:
            print(f"[Producer-{camera_id}] ‚úÖ Video {os.path.basename(video_path)} k·∫øt th√∫c ({frame_count} frames).")
            break

        frame_b64 = encode_frame(frame)
        message = {
            "camera_id": camera_id,
            "timestamp": time.time(),
            "frame_data": frame_b64
        }

        producer.send(TOPIC, value=message)
        frame_count += 1
        time.sleep(fps_interval)

    cap.release()
    producer.flush()
    print(f"[Producer-{camera_id}] üì§ G·ª≠i th√†nh c√¥ng {frame_count} frames t·ªõi Kafka.")


# ==========================
# 3Ô∏è‚É£ Main
# ==========================
def main():
    if len(sys.argv) != 3:
        print("‚ùó C√°ch d√πng: python vehicle_producer_single.py <camera_id> <video_path>")
        sys.exit(1)

    camera_id = sys.argv[1]
    video_path = sys.argv[2]

    print(f"[Producer-{camera_id}] üîå K·∫øt n·ªëi Kafka broker t·∫°i {KAFKA_BROKER} ...")

    producer = KafkaProducer(
        bootstrap_servers=KAFKA_BROKER,
        value_serializer=lambda v: json.dumps(v).encode("utf-8"),
        retries=3
    )

    stream_video(video_path, producer, camera_id)
    print(f"[Producer-{camera_id}] üèÅ Ho√†n t·∫•t g·ª≠i d·ªØ li·ªáu.")


if __name__ == "__main__":
    main()
